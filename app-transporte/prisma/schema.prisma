generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN_TRANSPORTADORA
  MOTORISTA
}

enum StatusViagem {
  PLANEJADA
  EM_ANDAMENTO
  FINALIZADA
  CANCELADA
}

model Transportadora {
  id        String   @id @default(uuid())
  nome      String
  cnpj      String   @unique
  email     String   @unique
  senhaHash String
  telefone  String?
  endereco  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  motoristas Motorista[]
  viagens    Viagem[]

  @@map("transportadoras")
}

model Motorista {
  id               String   @id @default(uuid())
  nome             String
  cpf              String   @unique
  cnh              String?
  telefone         String?
  transportadoraId String
  codigoValidacao  String   @unique
  validado         Boolean  @default(false)
  email            String   @unique
  senhaHash        String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  transportadora Transportadora @relation(fields: [transportadoraId], references: [id])
  viagens        Viagem[]

  @@index([transportadoraId])
  @@map("motoristas")
}


model Viagem {
  id               String       @id @default(uuid())
  descricao        String
  dataInicio       DateTime
  dataFim          DateTime?
  status           StatusViagem @default(PLANEJADA)
  transportadoraId String
  motoristaId      String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt

  transportadora Transportadora @relation(fields: [transportadoraId], references: [id])
  motorista      Motorista      @relation(fields: [motoristaId], references: [id])
  receitas       Receita[]
  despesas       Despesa[]
  acerto         Acerto?

  @@index([transportadoraId])
  @@index([motoristaId])
  @@index([status])
  @@map("viagens")
}

model Receita {
  id        String   @id @default(uuid())
  viagemId  String
  valor     Decimal  @db.Decimal(10, 2)
  descricao String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  viagem Viagem @relation(fields: [viagemId], references: [id])

  @@index([viagemId])
  @@map("receitas")
}

model Despesa {
  id        String   @id @default(uuid())
  viagemId  String
  valor     Decimal  @db.Decimal(10, 2)
  descricao String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  viagem Viagem @relation(fields: [viagemId], references: [id])

  @@index([viagemId])
  @@map("despesas")
}

model Acerto {
  id        String   @id @default(uuid())
  viagemId  String   @unique
  valor     Decimal  @db.Decimal(10, 2)
  pago      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  viagem Viagem @relation(fields: [viagemId], references: [id])

  @@map("acertos")
}
